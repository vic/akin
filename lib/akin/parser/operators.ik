Akin Parser Operators = Origin mimic
Akin Parser Operators do(
  
  defaultOperators = dict(
    "!"      =>  0,
    "?"      =>  0,
    "$"      =>  0,
    "~"      =>  0,
    "#"      =>  0,
    "**"     =>  1,
    "*"      =>  2,
    "/"      =>  2,
    "%"      =>  2,
    "+"      =>  3,
    "-"      =>  3,
    "\u2229" =>  3,
    "\u222A" =>  3,
    "<<"     =>  4,
    ">>"     =>  4,
    "<=>"    =>  5,
    ">"      =>  5,
    "<"      =>  5,
    "<="     =>  5,
    "\u2264" =>  5,
    ">="     =>  5,
    "\u2265" =>  5,
    "<>"     =>  5,
    "<>>"    =>  5,
    "\u2282" =>  5,
    "\u2283" =>  5,
    "\u2286" =>  5,
    "\u2287" =>  5,
    "=="     =>  6,
    "!="     =>  6,
    "\u2260" =>  6,
    "==="    =>  6,
    "=~"     =>  6,
    "!~"     =>  6,
    "&"      =>  7,
    "^"      =>  8,
    "|"      =>  9,
    "&&"     =>  10,
    "?&"     =>  10,
    "||"     =>  11,
    "?|"     =>  11,
    ".."     =>  12,
    "..."    =>  12,
    "=>"     =>  12,
    "<->"    =>  12,
    "->"     =>  12,
    "\u2218" =>  12,
    "+>"     =>  12,
    "!>"     =>  12,
    "&>"     =>  12,
    "%>"     =>  12,
    "#>"     =>  12,
    "@>"     =>  12,
    "/>"     =>  12,
    "*>"     =>  12,
    "?>"     =>  12,
    "|>"     =>  12,
    "^>"     =>  12,
    "~>"     =>  12,
    "->>"    =>  12,
    "+>>"    =>  12,
    "!>>"    =>  12,
    "&>>"    =>  12,
    "%>>"    =>  12,
    "#>>"    =>  12,
    "@>>"    =>  12,
    "/>>"    =>  12,
    "*>>"    =>  12,
    "?>>"    =>  12,
    "|>>"    =>  12,
    "^>>"    =>  12,
    "~>>"    =>  12,
    "=>>"    =>  12,
    "**>"    =>  12,
    "**>>"   =>  12,
    "&&>"    =>  12,
    "&&>>"   =>  12,
    "||>"    =>  12,
    "||>>"   =>  12,
    "$>"     =>  12,
    "$>>"    =>  12,
    "+="     =>  13,
    "-="     =>  13,
    "**="    =>  13,
    "*="     =>  13,
    "/="     =>  13,
    "%="     =>  13,
    "and"    =>  13,
    "nand"   =>  13,
    "&="     =>  13,
    "&&="    =>  13,
    "^="     =>  13,
    "or"     =>  13,
    "xor"    =>  13,
    "nor"    =>  13,
    "|="     =>  13,
    "||="    =>  13,
    "<<="    =>  13,
    ">>="    =>  13,
    "<-"     =>  14,
    "return" =>  14,
    "import" =>  14
  )

  defaultTernaryOperators = dict(
    "="   =>  2,
    "+="  =>  2,
    "-="  =>  2,
    "/="  =>  2,
    "*="  =>  2,
    "**=" =>  2,
    "%="  =>  2,
    "&="  =>  2,
    "&&=" =>  2,
    "|="  =>  2,
    "||=" =>  2,
    "^="  =>  2,
    "<<=" =>  2,
    ">>=" =>  2,
    "++"  =>  1,
    "--"  =>  1
  )

  defaultInvertedOperators = dict(
    "\u2208" =>  12,
    "\u2209" =>  12,
    "::"     =>  12,
    ":::"    =>  12
  )
  
  operatorPrefixPrecedence = dict(
    "|" =>  9,
    "^" =>  8,
    "&" =>  7,
    "<" =>  5,
    ">" =>  5,
    "=" =>  6,
    "!" =>  6,
    "?" =>  6,
    "~" =>  6,
    "$" =>  6,
    "+" =>  3,
    "-" =>  3,
    "*" =>  2,
    "/" =>  2,
    "%" =>  2
  )

  inverted? = method(msg, 
    if(name = msg name,
      invertedOperatorTable key?(name),
      false)
  )

  precedence = method(msg, 
    name = msg name asText
    value = operatorTable[name] || invertedOperatorTable[name]
    unless(value,
      if(name length > 0,
        return operatorPrefixPrecedence[name[0..0]] || -1
      )
    )
    return value || -1
  )

  arity = method(msg,
    trinaryOperatorTable[msg name asText] || -1
  )
  
)
